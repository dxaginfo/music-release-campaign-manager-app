version: '3'

services:
  # Backend API Service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mrcm-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/musicreleasecampaign
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=30d
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  # Frontend Client Service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: mrcm-client
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - app-network

  # MongoDB Service
  mongo:
    image: mongo:4.4
    container_name: mrcm-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # Redis Service for Caching
  redis:
    image: redis:6-alpine
    container_name: mrcm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

# Volumes
volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local

# Networks
networks:
  app-network:
    driver: bridge